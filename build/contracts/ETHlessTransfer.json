{
  "contractName": "ETHlessTransfer",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RELAYER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows users to send ETHless transfer by hiring a transaction relayer to pay the gas fee for them. The relayer gets paid in this ERC20 token for `fee`.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/osboxes/KRWC-G-1/contracts/abstracts/ETHlessTransfer.sol\":\"ETHlessTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"/home/osboxes/KRWC-G-1/contracts/abstracts/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xb6913f9b44cac27fca595fa2ff8e5bed34afa782082d2ce6d2453526e6c67c88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0283862516589b85d2a81b0a8efc25dafa6f0bad3e16da54706eadeefa4952b\",\"dweb:/ipfs/QmWdnifnhFwK2fB55RZr7PXoSFv6ZMnKFVKupEkvxAVzUQ\"]},\"/home/osboxes/KRWC-G-1/contracts/abstracts/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6d3c1e356c18010021ecbe5f09d76f0e54484c51f081fbda386472539eaf5109\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d5a5ab3a0e0112fa07e667019985af4aa2ad6244fab4d6759205980c16c255\",\"dweb:/ipfs/QmUrsgj8ABV2AtygmTcfsYy9P1SkVvgKd1PAWCAtSgtGja\"]},\"/home/osboxes/KRWC-G-1/contracts/abstracts/ContextUpgradeable.sol\":{\"keccak256\":\"0x32c90548888c15b85c26564a15b4ba94b3e0138fd41b87b0324fbd3a8f5dc6a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://450689af0dbf9ac9b3169713002b947c3ad29964f1107696468d63c06a7053d9\",\"dweb:/ipfs/QmceSToRym4C5sBwb3Bsq1fa8rKBrobGmKozbn6QS4mbuU\"]},\"/home/osboxes/KRWC-G-1/contracts/abstracts/ERC20Upgradeable.sol\":{\"keccak256\":\"0xff431da1d0a85cd22fe7d01ff17f598485290a7f64df76181fbc21c481dbd366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bcf24356f3585f9bc1a5e443d879d7b11732938b224639df9f695145168a654\",\"dweb:/ipfs/QmU5cDoTX61EmyXUfc6HfuMBP7rEFuX5ac4E9D7d8HsX1t\"]},\"/home/osboxes/KRWC-G-1/contracts/abstracts/ETHlessTransfer.sol\":{\"keccak256\":\"0xec4562799e83965886e2e836a979b2727ca2ad6399e47432fac93326b9034be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f79d318b78ab2e0347253f75ef95c163147391d8b9a8a26f136d5ea80073ac2\",\"dweb:/ipfs/QmPoPxCvbGidLGzpD5xJhoDCuUhQt1qR6KomL2yqcWg7xH\"]},\"/home/osboxes/KRWC-G-1/contracts/libs/GluwacoinModel.sol\":{\"keccak256\":\"0x2664067af1b9efd565054028b2d09ab2216eeff643763a357bab328f39c64be5\",\"urls\":[\"bzz-raw://ef3f303dc3dadf70397613995bd07a6ebac4a660e8dbf09810bdf4df19367314\",\"dweb:/ipfs/Qmcjz91xhrGbG9EhwY2pad2XkukmmTdrMQNjkF1YQcx5ik\"]},\"/home/osboxes/KRWC-G-1/contracts/libs/Validate.sol\":{\"keccak256\":\"0xacc3a0db3cea8f0a7926e946a2ee0ca2a41ec417869bb14542a84cacb24500c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://158a9a8d53da49d59e1b45f2e8b0d813c723c11c8d8251582e5f39df67ffb208\",\"dweb:/ipfs/QmXpHxhWoYFFnkyTSYpt1VzZP5xe6dgE8tdYYYNEEdoSAf\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xf449ca0a763d4b1b4462cf8706857074492f324020a2b9d099181b5383055ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5ec4671e17a3a805bc75e989180616001f5fad2043da849e9e8c1dae2805ed3\",\"dweb:/ipfs/QmeVryqLgUYRDJhFgv957unYkEg8pqNENsUZnmvm176Fno\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x6795c369a4eefa78468e38966f7851fbc2dda5e5b9ccd3fa2b45970e2e4d3abd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91e63b32b515ec23a00d2370e838079bc94093524435b08e41cda6725d827470\",\"dweb:/ipfs/Qmdji5aKmdbLq26sGFXFko5PQUtokdJPT23QtKVGKsX9mw\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x37c56d5e4a1c4c65ad0dcc6af28442c5d35c6ca07d9ad6e966e07dceb97e6c8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb2949782c621d81bbe0a7bdf82ff7196eff7016a67f734eb34c2b6620998b72\",\"dweb:/ipfs/QmWhYKgbu39Z664orfXNydr1EWpZCKpjxUdJs7Du6VHSTf\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xc7af08df3d3e818ce36f95aa879c13245772fed21b553e6033292ea4edc2a9f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://639c22bcf1ba4c783016c3eed1d9b546444feecb917a67201d66b6762df0b8a2\",\"dweb:/ipfs/QmebyzSijf6BPXaXLHcJPZnPpLk48UW1esmUTEoGd4hHkv\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xdddbd304b5a96782965d6c04ea9889734be0691a68fcff10908f48ce330cac7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddaa72f673d2ff3fac710713dbf3ea274ab0b673d62bde536938215368869ce0\",\"dweb:/ipfs/QmR5VQ7rEAk7hyrrTPhpp5Bvd3VKUkjEfPvJqfS8saUen8\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0xa8eded8062871a4b146c437c8e0e5ba96b1fec87c9f303a461a727b3fd5856d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://289e38f33ce5b3ed05da39b9f075dacaf3408351a439b69ef3b24bbece3b0385\",\"dweb:/ipfs/QmQBZdu6SERmKqpYySvGjNeKUh3gRVFrqKajJf2LVcRWQv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101075760003560e01c806301ffc9a71461010c57806306fdde0314610134578063095ea7b31461014957806318160ddd1461015c57806323b872dd1461016e578063248a9ca3146101815780632f2ff15d14610194578063313ce567146101a957806336568abe146101b857806339509351146101cb57806370a08231146101de5780639010d07c1461020757806391d1485414610232578063926d7d7f1461024557806395d89b411461026c578063a217fddf14610274578063a457c2d71461027c578063a9059cbb1461028f578063ca15c873146102a2578063d547741f146102b5578063dd62ed3e146102c8575b600080fd5b61011f61011a366004610e4e565b610301565b60405190151581526020015b60405180910390f35b61013c61032c565b60405161012b9190610ee7565b61011f610157366004610dc6565b6103be565b60cc545b60405190815260200161012b565b61011f61017c366004610d8a565b6103d4565b61016061018f366004610df0565b610427565b6101a76101a2366004610e09565b61043c565b005b6040516012815260200161012b565b6101a76101c6366004610e09565b610463565b61011f6101d9366004610dc6565b610485565b6101606101ec366004610d3c565b6001600160a01b0316600090815260ca602052604090205490565b61021a610215366004610e2c565b6104bc565b6040516001600160a01b03909116815260200161012b565b61011f610240366004610e09565b6104db565b6101607fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc481565b61013c610506565b610160600081565b61011f61028a366004610dc6565b610515565b61011f61029d366004610dc6565b610554565b6101606102b0366004610df0565b610561565b6101a76102c3366004610e09565b610578565b6101606102d6366004610d57565b6001600160a01b03918216600090815260cb6020908152604080832093909416825291909152205490565b60006001600160e01b03198216635a05180f60e01b1480610326575061032682610582565b92915050565b606060cd805461033b90610fab565b80601f016020809104026020016040519081016040528092919081815260200182805461036790610fab565b80156103b45780601f10610389576101008083540402835291602001916103b4565b820191906000526020600020905b81548152906001019060200180831161039757829003601f168201915b5050505050905090565b60006103cb3384846105b7565b50600192915050565b60006103e184848461069c565b6001600160a01b038416600090815260cb60209081526040808320338085529252909120549061041c9086906104178685610f51565b6105b7565b506001949350505050565b60009081526065602052604090206001015490565b61044682826107d0565b600082815260976020526040902061045e90826107ed565b505050565b61046d8282610802565b600082815260976020526040902061045e9082610880565b33600081815260cb602090815260408083206001600160a01b038716845290915281205490916103cb918590610417908690610f1a565b60008281526097602052604081206104d49083610895565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060ce805461033b90610fab565b33600081815260cb602090815260408083206001600160a01b0387168452909152812054909161054a90856104178685610f51565b5060019392505050565b60006103cb33848461069c565b6000818152609760205260408120610326906108a1565b61046d82826108ab565b60006001600160e01b03198216637965db0b60e01b148061032657506301ffc9a760e01b6001600160e01b0319831614610326565b6001600160a01b038316158015906105d757506001600160a01b03821615155b61063b5760405162461bcd60e51b815260206004820152602a60248201527f45524332303a20617070726f76652066726f6d206f7220746f20746865207a65604482015269726f206164647265737360b01b60648201526084015b60405180910390fd5b6001600160a01b03838116600081815260cb602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316158015906106bc57506001600160a01b03821615155b61071c5760405162461bcd60e51b815260206004820152602b60248201527f45524332303a207472616e736665722066726f6d206f7220746f20746865207a60448201526a65726f206164647265737360a81b6064820152608401610632565b6001600160a01b038316600090815260ca602052604090205461073f8282610f51565b6001600160a01b03808616600090815260ca60205260408082209390935590851681529081208054849290610775908490610f1a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107c191815260200190565b60405180910390a35b50505050565b6107d982610427565b6107e381336108c8565b61045e838361092c565b60006104d4836001600160a01b0384166109b2565b6001600160a01b03811633146108725760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610632565b61087c8282610a01565b5050565b60006104d4836001600160a01b038416610a68565b60006104d48383610b5b565b6000610326825490565b6108b482610427565b6108be81336108c8565b61045e8383610a01565b6108d282826104db565b61087c576108ea816001600160a01b03166014610b85565b6108f5836020610b85565b604051602001610906929190610e78565b60408051601f198184030181529082905262461bcd60e51b825261063291600401610ee7565b61093682826104db565b61087c5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561096e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008181526001830160205260408120546109f957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610326565b506000610326565b610a0b82826104db565b1561087c5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008181526001830160205260408120548015610b51576000610a8c600183610f51565b8554909150600090610aa090600190610f51565b9050818114610b05576000866000018281548110610ac057610ac0611012565b9060005260206000200154905080876000018481548110610ae357610ae3611012565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b1657610b16610ffc565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610326565b6000915050610326565b6000826000018281548110610b7257610b72611012565b9060005260206000200154905092915050565b60606000610b94836002610f32565b610b9f906002610f1a565b6001600160401b03811115610bb657610bb6611028565b6040519080825280601f01601f191660200182016040528015610be0576020820181803683370190505b509050600360fc1b81600081518110610bfb57610bfb611012565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610c2a57610c2a611012565b60200101906001600160f81b031916908160001a9053506000610c4e846002610f32565b610c59906001610f1a565b90505b6001811115610cd1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c8d57610c8d611012565b1a60f81b828281518110610ca357610ca3611012565b60200101906001600160f81b031916908160001a90535060049490941c93610cca81610f94565b9050610c5c565b5083156104d45760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610632565b80356001600160a01b0381168114610d3757600080fd5b919050565b600060208284031215610d4e57600080fd5b6104d482610d20565b60008060408385031215610d6a57600080fd5b610d7383610d20565b9150610d8160208401610d20565b90509250929050565b600080600060608486031215610d9f57600080fd5b610da884610d20565b9250610db660208501610d20565b9150604084013590509250925092565b60008060408385031215610dd957600080fd5b610de283610d20565b946020939093013593505050565b600060208284031215610e0257600080fd5b5035919050565b60008060408385031215610e1c57600080fd5b82359150610d8160208401610d20565b60008060408385031215610e3f57600080fd5b50508035926020909101359150565b600060208284031215610e6057600080fd5b81356001600160e01b0319811681146104d457600080fd5b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610eaa816017850160208801610f68565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610edb816028840160208801610f68565b01602801949350505050565b6020815260008251806020840152610f06816040850160208701610f68565b601f01601f19169190910160400192915050565b60008219821115610f2d57610f2d610fe6565b500190565b6000816000190483118215151615610f4c57610f4c610fe6565b500290565b600082821015610f6357610f63610fe6565b500390565b60005b83811015610f83578181015183820152602001610f6b565b838111156107ca5750506000910152565b600081610fa357610fa3610fe6565b506000190190565b600181811c90821680610fbf57607f821691505b60208210811415610fe057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122089c007fd24574caf017a728f4ffc1a8ac7b96dbc7c1d9c1bf83f7bf91b42342c64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7710:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:20",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:20",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:20"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:20"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:20",
                "type": ""
              }
            ],
            "src": "14:173:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:20",
                "type": ""
              }
            ],
            "src": "192:186:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:20",
                "type": ""
              }
            ],
            "src": "383:260:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "752:224:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "798:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "807:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "810:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "800:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "800:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "800:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "773:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "782:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "765:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "762:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "823:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "852:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "833:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "823:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "871:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "904:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "915:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "900:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "900:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "881:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "928:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "955:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "966:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "951:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "938:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "928:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "702:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "713:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "725:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "733:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "741:6:20",
                "type": ""
              }
            ],
            "src": "648:328:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1068:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1114:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1123:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1116:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1116:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1116:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1089:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1098:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1085:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1081:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1078:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1139:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1168:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1149:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1214:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1225:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1197:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1187:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1026:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1037:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1049:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1057:6:20",
                "type": ""
              }
            ],
            "src": "981:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1310:110:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1356:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1365:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1368:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1358:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1358:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1358:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1331:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1340:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1327:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1327:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1352:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1323:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1320:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1381:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1404:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1391:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1381:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1276:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1287:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1299:6:20",
                "type": ""
              }
            ],
            "src": "1240:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1512:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1558:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1567:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1570:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1560:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1560:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1560:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1533:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1542:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1529:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1529:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1554:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1525:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1522:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1583:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1606:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1593:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1583:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1625:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1658:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1669:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1654:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1654:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1635:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1635:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1625:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1470:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1481:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1493:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1501:6:20",
                "type": ""
              }
            ],
            "src": "1425:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1771:161:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1817:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1826:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1829:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1819:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1819:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1792:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1801:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1788:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1813:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1784:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1781:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1842:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1865:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1852:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1884:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1911:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1922:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1907:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1907:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1894:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1729:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1740:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1752:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1760:6:20",
                "type": ""
              }
            ],
            "src": "1684:248:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:217:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2052:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2061:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2064:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2054:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2054:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2054:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2027:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2036:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2023:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2023:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2048:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2019:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2077:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2103:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2090:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2081:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2177:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2186:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2189:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2179:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2179:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2179:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2135:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2146:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2157:3:20",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2162:10:20",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2153:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2153:20:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2142:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2142:32:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2132:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2132:43:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2125:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:51:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2122:71:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2202:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2212:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2202:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1972:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1983:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1995:6:20",
                "type": ""
              }
            ],
            "src": "1937:286:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:397:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2634:3:20"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2639:25:20",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2627:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2627:38:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2627:38:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2674:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2694:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2688:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2678:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2736:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2744:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2732:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2755:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:20",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2751:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2751:12:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2765:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2710:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2710:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2710:62:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2781:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2795:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2800:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2791:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2791:16:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2785:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2827:2:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2831:2:20",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2823:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2823:11:20"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2836:19:20",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2816:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2816:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2816:40:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2865:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2887:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2881:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2881:13:20"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2869:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2929:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2937:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2925:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2925:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2948:2:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2952:2:20",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:11:20"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2957:8:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2903:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2903:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2903:63:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2975:33:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2990:2:20"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "2994:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2986:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2986:17:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3005:2:20",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2982:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2982:26:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2975:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2585:3:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2590:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2598:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2609:3:20",
                "type": ""
              }
            ],
            "src": "2228:786:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3120:102:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3130:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3142:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3138:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3138:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3130:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3172:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3187:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3203:3:20",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3208:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3199:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3199:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3212:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3195:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3195:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3183:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3183:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3165:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3165:51:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3089:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3100:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3111:4:20",
                "type": ""
              }
            ],
            "src": "3019:203:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3322:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3332:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3344:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3355:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3340:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3332:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3374:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3399:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3392:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3392:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3385:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3385:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3367:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3367:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3367:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3291:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3302:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3313:4:20",
                "type": ""
              }
            ],
            "src": "3227:187:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3520:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3530:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3542:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3553:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3538:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3538:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3530:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3572:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3583:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3565:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3565:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3565:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3489:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3500:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3511:4:20",
                "type": ""
              }
            ],
            "src": "3419:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3722:262:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3739:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3750:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3732:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3732:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3732:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3762:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3782:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3776:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3776:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3766:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3809:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3820:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3805:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3805:18:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3825:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3798:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3798:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3798:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3867:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3875:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3863:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3863:15:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3884:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3895:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:18:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3900:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3841:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:66:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3841:66:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3916:62:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3932:9:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3951:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3959:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3947:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3947:15:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3968:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3964:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3964:7:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3943:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3943:29:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3928:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3928:45:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3975:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3924:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3924:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3916:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3691:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3702:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3713:4:20",
                "type": ""
              }
            ],
            "src": "3601:383:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4163:182:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4180:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4191:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4173:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4173:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4214:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4225:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4210:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4210:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4230:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4203:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4203:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4203:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4253:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4264:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4249:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4249:18:20"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4269:34:20",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4242:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4242:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4242:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4313:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4325:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4336:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4321:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4321:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4313:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4140:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4154:4:20",
                "type": ""
              }
            ],
            "src": "3989:356:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4524:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4541:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4552:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4534:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4534:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4534:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4575:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4586:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4571:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4571:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4591:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4564:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4564:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4564:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4614:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4625:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4610:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4610:18:20"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d206f7220746f20746865207a",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4630:34:20",
                        "type": "",
                        "value": "ERC20: transfer from or to the z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4603:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4603:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4603:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4685:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4696:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4681:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4681:18:20"
                      },
                      {
                        "hexValue": "65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4701:13:20",
                        "type": "",
                        "value": "ero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4674:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4674:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4724:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4736:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4747:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4732:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4732:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4724:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8891b35cd7fdf0a133a617b3a29787482b110661182f3cbcc79dfd3b0c66b76f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4501:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4515:4:20",
                "type": ""
              }
            ],
            "src": "4350:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4936:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4953:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4964:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4946:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4946:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4946:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4987:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4998:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4983:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4983:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5003:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4976:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4976:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4976:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5026:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5037:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5022:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5022:18:20"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d206f7220746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5042:34:20",
                        "type": "",
                        "value": "ERC20: approve from or to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5015:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5015:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5015:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5097:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5108:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5093:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5093:18:20"
                      },
                      {
                        "hexValue": "726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5113:12:20",
                        "type": "",
                        "value": "ro address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5086:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5086:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5086:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5135:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5147:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5158:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5143:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5143:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5135:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa4746bd3bcfae8c5e59f9dd756ac713c1a9032340f6c43ee068631c74e74385__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4913:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4927:4:20",
                "type": ""
              }
            ],
            "src": "4762:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5347:237:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5364:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5375:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5357:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5357:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5357:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5398:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5409:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5394:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5394:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5414:2:20",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5387:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5387:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5387:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5437:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5448:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5433:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5433:18:20"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5453:34:20",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5426:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5426:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5426:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5508:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5519:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5504:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5504:18:20"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5524:17:20",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5497:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5497:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5497:45:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5551:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5563:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5574:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5559:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5559:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5551:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5324:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5338:4:20",
                "type": ""
              }
            ],
            "src": "5173:411:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5690:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5700:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5712:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5708:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5700:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5742:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5753:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5735:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5735:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5735:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5659:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5670:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5681:4:20",
                "type": ""
              }
            ],
            "src": "5589:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5868:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5878:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5890:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5901:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5886:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5886:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5878:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5920:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5935:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5943:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5931:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5931:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5913:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5913:36:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5837:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5848:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5859:4:20",
                "type": ""
              }
            ],
            "src": "5771:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6008:80:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6035:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6037:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6037:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6037:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6024:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6031:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6027:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6027:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6021:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6021:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6018:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6066:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6077:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6080:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6073:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6066:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5991:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5994:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6000:3:20",
                "type": ""
              }
            ],
            "src": "5960:128:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6145:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6204:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6206:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6206:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6206:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6176:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6169:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6169:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6162:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6162:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6184:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6195:1:20",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6191:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6191:6:20"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6199:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6187:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6187:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6181:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6181:21:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6158:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6158:45:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6155:71:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6235:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6250:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6253:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6246:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6246:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6235:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6124:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6127:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6133:7:20",
                "type": ""
              }
            ],
            "src": "6093:168:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6315:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6337:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6339:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6339:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6339:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6331:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6334:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6328:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6328:8:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6325:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6368:17:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6380:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6383:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6376:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6376:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6368:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6297:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6300:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6306:4:20",
                "type": ""
              }
            ],
            "src": "6266:125:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6449:205:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6459:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6468:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6463:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6528:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6553:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6558:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6549:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6549:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6572:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6577:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6568:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6568:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6562:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6562:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6542:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6542:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6542:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6489:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6492:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6486:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6500:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6502:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6511:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6514:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6507:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6507:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6502:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6482:3:20",
                    "statements": []
                  },
                  "src": "6478:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6617:31:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6630:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6635:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6626:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6626:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6644:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6619:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6619:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6619:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6606:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6609:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6603:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6600:48:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6427:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6432:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6437:6:20",
                "type": ""
              }
            ],
            "src": "6396:258:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6706:89:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6733:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6735:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6735:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6735:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6726:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6719:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6719:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6716:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6764:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6775:5:20"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6786:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6782:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6782:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6771:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6771:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6764:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6688:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6698:3:20",
                "type": ""
              }
            ],
            "src": "6659:136:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6855:325:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6865:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6879:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6882:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "6875:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6875:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6865:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6896:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6926:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6932:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6922:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6922:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6900:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6973:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6975:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6989:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6997:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6985:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6985:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6975:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6953:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6946:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6943:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7063:111:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7084:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7091:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7096:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7087:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7087:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7077:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7077:31:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7077:31:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7128:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7131:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7121:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7121:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7121:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7156:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7159:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7149:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7149:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7149:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7019:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7042:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7050:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7039:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7039:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7016:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7016:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7013:161:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6835:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6844:6:20",
                "type": ""
              }
            ],
            "src": "6800:380:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7217:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7234:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7241:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7246:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7237:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7237:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7227:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7227:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7274:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7277:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7267:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7267:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7267:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7298:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7301:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7291:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7291:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7291:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7185:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7349:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7366:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7373:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7378:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7369:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7369:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7359:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7359:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7359:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7406:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7409:4:20",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7399:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7399:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7399:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7430:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7433:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7423:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7423:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7423:15:20"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "7317:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7481:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7498:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7505:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7510:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7501:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7501:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7491:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7491:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7491:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7538:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7541:4:20",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7531:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7531:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7531:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7562:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7565:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7555:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7555:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7555:15:20"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7449:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7613:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7630:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7637:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7642:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7633:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7633:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7623:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7623:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7623:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7670:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7673:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7663:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7663:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7663:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7694:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7687:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7687:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7687:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7581:127:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8891b35cd7fdf0a133a617b3a29787482b110661182f3cbcc79dfd3b0c66b76f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC20: transfer from or to the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fa4746bd3bcfae8c5e59f9dd756ac713c1a9032340f6c43ee068631c74e74385__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20: approve from or to the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "485:3138:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "485:3138:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:223:1;;;;;;:::i;:::-;;:::i;:::-;;;3392:14:20;;3385:22;3367:41;;3355:2;3340:18;1155:223:1;;;;;;;;2514:98:6;;;:::i;:::-;;;;;;;:::i;4611:166::-;;;;;;:::i;:::-;;:::i;3602:106::-;3689:12;;3602:106;;;3565:25:20;;;3553:2;3538:18;3602:106:6;3419:177:20;5244:363:6;;;;;;:::i;:::-;;:::i;5827:121:2:-;;;;;;:::i;:::-;;:::i;2493:162:1:-;;;;;;:::i;:::-;;:::i;:::-;;3451:91:6;;;3533:2;5913:36:20;;5901:2;5886:18;3451:91:6;5771:184:20;3000:171:1;;;;;;:::i;:::-;;:::i;6002:212:6:-;;;;;;:::i;:::-;;:::i;3766:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3866:18:6;3840:7;3866:18;;;:9;:18;;;;;;;3766:125;1963:143:1;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3183:32:20;;;3165:51;;3153:2;3138:18;1963:143:1;3019:203:20;4722:137:2;;;;;;:::i;:::-;;:::i;791:64:7:-;;830:25;791:64;;2725:102:6;;;:::i;2743:49:2:-;;2788:4;2743:49;;6701:282:6;;;;;;:::i;:::-;;:::i;4094:172::-;;;;;;:::i;:::-;;:::i;2274:132:1:-;;;;;;:::i;:::-;;:::i;2743:167::-;;;;;;:::i;:::-;;:::i;4324:149:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4439:18:6;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149;1155:223:1;1240:4;-1:-1:-1;;;;;;1263:68:1;;-1:-1:-1;;;1263:68:1;;:108;;;1335:36;1359:11;1335:23;:36::i;:::-;1256:115;1155:223;-1:-1:-1;;1155:223:1:o;2514:98:6:-;2568:13;2600:5;2593:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:98;:::o;4611:166::-;4694:4;4710:39;774:10:3;4733:7:6;4742:6;4710:8;:39::i;:::-;-1:-1:-1;4766:4:6;4611:166;;;;:::o;5244:363::-;5380:4;5396:36;5406:6;5414:9;5425:6;5396:9;:36::i;:::-;-1:-1:-1;;;;;5470:19:6;;5443:24;5470:19;;;:11;:19;;;;;;;;774:10:3;5470:33:6;;;;;;;;;;5513:57;;5470:19;;5544:25;5563:6;5470:33;5544:25;:::i;:::-;5513:8;:57::i;:::-;-1:-1:-1;5596:4:6;;5244:363;-1:-1:-1;;;;5244:363:6:o;5827:121:2:-;5893:7;5919:12;;;:6;:12;;;;;:22;;;;5827:121::o;2493:162:1:-;2577:30;2593:4;2599:7;2577:15;:30::i;:::-;2617:18;;;;:12;:18;;;;;:31;;2640:7;2617:22;:31::i;:::-;;2493:162;;:::o;3000:171::-;3087:33;3106:4;3112:7;3087:18;:33::i;:::-;3130:18;;;;:12;:18;;;;;:34;;3156:7;3130:25;:34::i;6002:212:6:-;774:10:3;6090:4:6;6138:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6138:34:6;;;;;;;;;;6090:4;;6106:80;;6129:7;;6138:47;;6175:10;;6138:47;:::i;1963:143:1:-;2045:7;2071:18;;;:12;:18;;;;;:28;;2093:5;2071:21;:28::i;:::-;2064:35;1963:143;-1:-1:-1;;;1963:143:1:o;4722:137:2:-;4800:4;4823:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4823:29:2;;;;;;;;;;;;;;;4722:137::o;2725:102:6:-;2781:13;2813:7;2806:14;;;;;:::i;6701:282::-;774:10:3;6794:4:6;6837:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6837:34:6;;;;;;;;;;6794:4;;6881:67;;6837:34;6913;6932:15;6837:34;6913;:::i;6881:67::-;-1:-1:-1;6972:4:6;;6701:282;-1:-1:-1;;;6701:282:6:o;4094:172::-;4180:4;4196:42;774:10:3;4220:9:6;4231:6;4196:9;:42::i;2274:132:1:-;2346:7;2372:18;;;:12;:18;;;;;:27;;:25;:27::i;2743:167::-;2828:31;2845:4;2851:7;2828:16;:31::i;4422:213:2:-;4507:4;-1:-1:-1;;;;;;4530:58:2;;-1:-1:-1;;;4530:58:2;;:98;;-1:-1:-1;;;;;;;;;;1127:51:16;;;4592:36:2;1019:166:16;9106:323:6;-1:-1:-1;;;;;9237:19:6;;;;;;:44;;-1:-1:-1;;;;;;9260:21:6;;;;9237:44;9229:99;;;;-1:-1:-1;;;9229:99:6;;4964:2:20;9229:99:6;;;4946:21:20;5003:2;4983:18;;;4976:30;5042:34;5022:18;;;5015:62;-1:-1:-1;;;5093:18:20;;;5086:40;5143:19;;9229:99:6;;;;;;;;;-1:-1:-1;;;;;9339:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9390:32;;3565:25:20;;;9390:32:6;;3538:18:20;9390:32:6;;;;;;;9106:323;;;:::o;7457:555::-;-1:-1:-1;;;;;7592:20:6;;;;;;:47;;-1:-1:-1;;;;;;7616:23:6;;;;7592:47;7584:103;;;;-1:-1:-1;;;7584:103:6;;4552:2:20;7584:103:6;;;4534:21:20;4591:2;4571:18;;;4564:30;4630:34;4610:18;;;4603:62;-1:-1:-1;;;4681:18:20;;;4674:41;4732:19;;7584:103:6;4350:407:20;7584:103:6;-1:-1:-1;;;;;7780:17:6;;7756:21;7780:17;;;:9;:17;;;;;;7827:22;7843:6;7780:17;7827:22;:::i;:::-;-1:-1:-1;;;;;7807:17:6;;;;;;;:9;:17;;;;;;:42;;;;7867:20;;;;;;;;:30;;7891:6;;7807:17;7867:30;;7891:6;;7867:30;:::i;:::-;;;;;;;;7930:9;-1:-1:-1;;;;;7913:35:6;7922:6;-1:-1:-1;;;;;7913:35:6;;7941:6;7913:35;;;;3565:25:20;;3553:2;3538:18;;3419:177;7913:35:6;;;;;;;;7959:46;7574:438;7457:555;;;:::o;6198:145:2:-;6281:18;6294:4;6281:12;:18::i;:::-;4307:30;4318:4;774:10:3;4307::2;:30::i;:::-;6311:25:::1;6322:4;6328:7;6311:10;:25::i;6243:150:18:-:0;6313:4;6336:50;6341:3;-1:-1:-1;;;;;6361:23:18;;6336:4;:50::i;7215:214:2:-;-1:-1:-1;;;;;7310:23:2;;774:10:3;7310:23:2;7302:83;;;;-1:-1:-1;;;7302:83:2;;5375:2:20;7302:83:2;;;5357:21:20;5414:2;5394:18;;;5387:30;5453:34;5433:18;;;5426:62;-1:-1:-1;;;5504:18:20;;;5497:45;5559:19;;7302:83:2;5173:411:20;7302:83:2;7396:26;7408:4;7414:7;7396:11;:26::i;:::-;7215:214;;:::o;6561:156:18:-;6634:4;6657:53;6665:3;-1:-1:-1;;;;;6685:23:18;;6657:7;:53::i;7501:156::-;7575:7;7625:22;7629:3;7641:5;7625:3;:22::i;7044:115::-;7107:7;7133:19;7141:3;3972:18;;3890:107;6577:147:2;6661:18;6674:4;6661:12;:18::i;:::-;4307:30;4318:4;774:10:3;4307::2;:30::i;:::-;6691:26:::1;6703:4;6709:7;6691:11;:26::i;5140:506::-:0;5220:22;5228:4;5234:7;5220;:22::i;:::-;5215:425;;5403:52;5442:7;-1:-1:-1;;;;;5403:52:2;5452:2;5403:30;:52::i;:::-;5526:49;5565:4;5572:2;5526:30;:49::i;:::-;5310:287;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5310:287:2;;;;;;;;;;-1:-1:-1;;;5258:371:2;;;;;;;:::i;8427:224::-;8501:22;8509:4;8515:7;8501;:22::i;:::-;8496:149;;8539:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8539:29:2;;;;;;;;;:36;;-1:-1:-1;;8539:36:2;8571:4;8539:36;;;8621:12;774:10:3;;695:96;8621:12:2;-1:-1:-1;;;;;8594:40:2;8612:7;-1:-1:-1;;;;;8594:40:2;8606:4;8594:40;;;;;;;;;;8427:224;;:::o;1641:404:18:-;1704:4;3778:19;;;:12;;;:19;;;;;;1720:319;;-1:-1:-1;1762:23:18;;;;;;;;:11;:23;;;;;;;;;;;;;1942:18;;1920:19;;;:12;;;:19;;;;;;:40;;;;1974:11;;1720:319;-1:-1:-1;2023:5:18;2016:12;;8657:225:2;8731:22;8739:4;8745:7;8731;:22::i;:::-;8727:149;;;8801:5;8769:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8769:29:2;;;;;;;;;;:37;;-1:-1:-1;;8769:37:2;;;8825:40;774:10:3;;8769:12:2;;8825:40;;8801:5;8825:40;8657:225;;:::o;2213:1388:18:-;2279:4;2416:19;;;:12;;;:19;;;;;;2450:15;;2446:1149;;2819:21;2843:14;2856:1;2843:10;:14;:::i;:::-;2891:18;;2819:38;;-1:-1:-1;2871:17:18;;2891:22;;2912:1;;2891:22;:::i;:::-;2871:42;;2945:13;2932:9;:26;2928:398;;2978:17;2998:3;:11;;3010:9;2998:22;;;;;;;;:::i;:::-;;;;;;;;;2978:42;;3149:9;3120:3;:11;;3132:13;3120:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3232:23;;;:12;;;:23;;;;;:36;;;2928:398;3404:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3496:3;:12;;:19;3509:5;3496:19;;;;;;;;;;;3489:26;;;3537:4;3530:11;;;;;;;2446:1149;3579:5;3572:12;;;;;4339:118;4406:7;4432:3;:11;;4444:5;4432:18;;;;;;;;:::i;:::-;;;;;;;;;4425:25;;4339:118;;;;:::o;1546:441:14:-;1621:13;1646:19;1678:10;1682:6;1678:1;:10;:::i;:::-;:14;;1691:1;1678:14;:::i;:::-;-1:-1:-1;;;;;1668:25:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1668:25:14;;1646:47;;-1:-1:-1;;;1703:6:14;1710:1;1703:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1703:15:14;;;;;;;;;-1:-1:-1;;;1728:6:14;1735:1;1728:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1728:15:14;;;;;;;;-1:-1:-1;1758:9:14;1770:10;1774:6;1770:1;:10;:::i;:::-;:14;;1783:1;1770:14;:::i;:::-;1758:26;;1753:132;1790:1;1786;:5;1753:132;;;-1:-1:-1;;;1837:5:14;1845:3;1837:11;1824:25;;;;;;;:::i;:::-;;;;1812:6;1819:1;1812:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1812:37:14;;;;;;;;-1:-1:-1;1873:1:14;1863:11;;;;;1793:3;;;:::i;:::-;;;1753:132;;;-1:-1:-1;1902:10:14;;1894:55;;;;-1:-1:-1;;;1894:55:14;;4191:2:20;1894:55:14;;;4173:21:20;;;4210:18;;;4203:30;4269:34;4249:18;;;4242:62;4321:18;;1894:55:14;3989:356:20;14:173;82:20;;-1:-1:-1;;;;;131:31:20;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:20:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:20;;1240:180;-1:-1:-1;1240:180:20:o;1425:254::-;1493:6;1501;1554:2;1542:9;1533:7;1529:23;1525:32;1522:52;;;1570:1;1567;1560:12;1522:52;1606:9;1593:23;1583:33;;1635:38;1669:2;1658:9;1654:18;1635:38;:::i;1684:248::-;1752:6;1760;1813:2;1801:9;1792:7;1788:23;1784:32;1781:52;;;1829:1;1826;1819:12;1781:52;-1:-1:-1;;1852:23:20;;;1922:2;1907:18;;;1894:32;;-1:-1:-1;1684:248:20:o;1937:286::-;1995:6;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2090:23;;-1:-1:-1;;;;;;2142:32:20;;2132:43;;2122:71;;2189:1;2186;2179:12;2228:786;-1:-1:-1;;;2634:3:20;2627:38;2609:3;2694:6;2688:13;2710:62;2765:6;2760:2;2755:3;2751:12;2744:4;2736:6;2732:17;2710:62;:::i;:::-;-1:-1:-1;;;2831:2:20;2791:16;;;2823:11;;;2816:40;2881:13;;2903:63;2881:13;2952:2;2944:11;;2937:4;2925:17;;2903:63;:::i;:::-;2986:17;3005:2;2982:26;;2228:786;-1:-1:-1;;;;2228:786:20:o;3601:383::-;3750:2;3739:9;3732:21;3713:4;3782:6;3776:13;3825:6;3820:2;3809:9;3805:18;3798:34;3841:66;3900:6;3895:2;3884:9;3880:18;3875:2;3867:6;3863:15;3841:66;:::i;:::-;3968:2;3947:15;-1:-1:-1;;3943:29:20;3928:45;;;;3975:2;3924:54;;3601:383;-1:-1:-1;;3601:383:20:o;5960:128::-;6000:3;6031:1;6027:6;6024:1;6021:13;6018:39;;;6037:18;;:::i;:::-;-1:-1:-1;6073:9:20;;5960:128::o;6093:168::-;6133:7;6199:1;6195;6191:6;6187:14;6184:1;6181:21;6176:1;6169:9;6162:17;6158:45;6155:71;;;6206:18;;:::i;:::-;-1:-1:-1;6246:9:20;;6093:168::o;6266:125::-;6306:4;6334:1;6331;6328:8;6325:34;;;6339:18;;:::i;:::-;-1:-1:-1;6376:9:20;;6266:125::o;6396:258::-;6468:1;6478:113;6492:6;6489:1;6486:13;6478:113;;;6568:11;;;6562:18;6549:11;;;6542:39;6514:2;6507:10;6478:113;;;6609:6;6606:1;6603:13;6600:48;;;-1:-1:-1;;6644:1:20;6626:16;;6619:27;6396:258::o;6659:136::-;6698:3;6726:5;6716:39;;6735:18;;:::i;:::-;-1:-1:-1;;;6771:18:20;;6659:136::o;6800:380::-;6879:1;6875:12;;;;6922;;;6943:61;;6997:4;6989:6;6985:17;6975:27;;6943:61;7050:2;7042:6;7039:14;7019:18;7016:38;7013:161;;;7096:10;7091:3;7087:20;7084:1;7077:31;7131:4;7128:1;7121:15;7159:4;7156:1;7149:15;7013:161;;6800:380;;;:::o;7185:127::-;7246:10;7241:3;7237:20;7234:1;7227:31;7277:4;7274:1;7267:15;7301:4;7298:1;7291:15;7317:127;7378:10;7373:3;7369:20;7366:1;7359:31;7409:4;7406:1;7399:15;7433:4;7430:1;7423:15;7449:127;7510:10;7505:3;7501:20;7498:1;7491:31;7541:4;7538:1;7531:15;7565:4;7562:1;7555:15;7581:127;7642:10;7637:3;7633:20;7630:1;7623:31;7673:4;7670:1;7663:15;7697:4;7694:1;7687:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.6;\n\nimport \"./AccessControlEnumerableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"./ERC20Upgradeable.sol\";\nimport \"../libs/GluwacoinModel.sol\";\n\nimport \"../libs/Validate.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows users to send ETHless transfer by hiring a transaction relayer to pay the\n * gas fee for them. The relayer gets paid in this ERC20 token for `fee`.\n */\ncontract ETHlessTransfer is\n    Initializable,\n    AccessControlEnumerableUpgradeable,\n    ERC20Upgradeable\n{\n    using AddressUpgradeable for address;\n    using ECDSAUpgradeable for bytes32;\n\n    mapping(address => mapping(uint256 => bool)) private _usedNonces;\n\n    // collects transaction relay fee\n    bytes32 public constant RELAYER_ROLE = keccak256(\"RELAYER_ROLE\");\n\n    function __ERC20ETHless_init_unchained(\n        string memory name_,\n        string memory symbol_\n    ) internal initializer {\n        __ERC20_init_unchained(name_, symbol_);\n        _setupRole(RELAYER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Moves `amount` tokens from the `sender`'s account to `recipient`\n     * and moves `fee` tokens from the `sender`'s account to a relayer's address.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits two {Transfer} events.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the `sender` must have a balance of at least the sum of `amount` and `fee`.\n     * - the `nonce` is only used once per `sender`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount,\n        uint256 fee,\n        uint256 nonce,\n        bytes calldata sig\n    ) internal virtual returns (bool success) {\n        uint256 senderBalance = balanceOf(sender);\n        require(\n            senderBalance >= (amount + fee),\n            \"ERC20ETHless: the balance is not sufficient\"\n        );\n\n        _useNonce(sender, nonce);\n\n        bytes32 hash = keccak256(\n            abi.encodePacked(\n                GluwacoinModel.SigDomain.Transfer,\n                block.chainid,\n                address(this),\n                sender,\n                recipient,\n                amount,\n                fee,\n                nonce\n            )\n        );\n        Validate._validateSignature(hash, sender, sig);\n\n        _collect(sender, fee);\n        _transfer(sender, recipient, amount);\n\n        return true;\n    }\n\n    function _useNonce(address signer, uint256 nonce) internal {\n        require(\n            !_usedNonces[signer][nonce],\n            \"ETHless: the nonce has already been used for this address\"\n        );\n        _usedNonces[signer][nonce] = true;\n    }\n\n    /** @dev check the amount of available tokens of sender to transfer.\n     *\n     * Do 2 checks:\n     * - Total balance must be equal or higher than the transferring amount.\n     * - Unreserving (the amount of tokens are not put as a reserve) must be equal or higher than the transferring amount.\n     */\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20Upgradeable) {\n        ERC20Upgradeable._beforeTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Collects `fee` from the sender.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _collect(address sender, uint256 amount) internal {\n        address relayer = getRoleMember(RELAYER_ROLE, 0);\n\n        _transfer(sender, relayer, amount);\n    }\n\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/ETHlessTransfer.sol",
  "ast": {
    "absolutePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/ETHlessTransfer.sol",
    "exportedSymbols": {
      "AccessControlEnumerableUpgradeable": [
        470
      ],
      "AccessControlUpgradeable": [
        854
      ],
      "AddressUpgradeable": [
        2877
      ],
      "ContextUpgradeable": [
        873
      ],
      "ECDSAUpgradeable": [
        3263
      ],
      "ERC165Upgradeable": [
        3309
      ],
      "ERC20Upgradeable": [
        2208
      ],
      "ETHlessTransfer": [
        2417
      ],
      "EnumerableSetUpgradeable": [
        3830
      ],
      "GluwacoinModel": [
        2437
      ],
      "IAccessControlEnumerableUpgradeable": [
        287
      ],
      "IAccessControlUpgradeable": [
        515
      ],
      "IERC165Upgradeable": [
        3321
      ],
      "IERC20MetadataUpgradeable": [
        2633
      ],
      "IERC20Upgradeable": [
        2608
      ],
      "Initializable": [
        2530
      ],
      "StringsUpgradeable": [
        3080
      ],
      "Validate": [
        2484
      ]
    },
    "id": 2418,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2210,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/AccessControlEnumerableUpgradeable.sol",
        "file": "./AccessControlEnumerableUpgradeable.sol",
        "id": 2211,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 471,
        "src": "58:50:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 2212,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2531,
        "src": "109:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/ERC20Upgradeable.sol",
        "file": "./ERC20Upgradeable.sol",
        "id": 2213,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2209,
        "src": "185:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/libs/GluwacoinModel.sol",
        "file": "../libs/GluwacoinModel.sol",
        "id": 2214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2438,
        "src": "218:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/libs/Validate.sol",
        "file": "../libs/Validate.sol",
        "id": 2215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2485,
        "src": "256:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2217,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2530,
              "src": "517:13:7"
            },
            "id": 2218,
            "nodeType": "InheritanceSpecifier",
            "src": "517:13:7"
          },
          {
            "baseName": {
              "id": 2219,
              "name": "AccessControlEnumerableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 470,
              "src": "536:34:7"
            },
            "id": 2220,
            "nodeType": "InheritanceSpecifier",
            "src": "536:34:7"
          },
          {
            "baseName": {
              "id": 2221,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2208,
              "src": "576:16:7"
            },
            "id": 2222,
            "nodeType": "InheritanceSpecifier",
            "src": "576:16:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2216,
          "nodeType": "StructuredDocumentation",
          "src": "288:196:7",
          "text": " @dev Extension of {ERC20} that allows users to send ETHless transfer by hiring a transaction relayer to pay the\n gas fee for them. The relayer gets paid in this ERC20 token for `fee`."
        },
        "fullyImplemented": true,
        "id": 2417,
        "linearizedBaseContracts": [
          2417,
          2208,
          2633,
          2608,
          470,
          854,
          3309,
          3321,
          515,
          873,
          287,
          2530
        ],
        "name": "ETHlessTransfer",
        "nameLocation": "494:15:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2225,
            "libraryName": {
              "id": 2223,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2877,
              "src": "605:18:7"
            },
            "nodeType": "UsingForDirective",
            "src": "599:37:7",
            "typeName": {
              "id": 2224,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "628:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2228,
            "libraryName": {
              "id": 2226,
              "name": "ECDSAUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3263,
              "src": "647:16:7"
            },
            "nodeType": "UsingForDirective",
            "src": "641:35:7",
            "typeName": {
              "id": 2227,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "id": 2234,
            "mutability": "mutable",
            "name": "_usedNonces",
            "nameLocation": "735:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "682:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 2233,
              "keyType": {
                "id": 2229,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:44:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 2232,
                "keyType": {
                  "id": 2230,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "709:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "701:24:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 2231,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "926d7d7f",
            "id": 2239,
            "mutability": "constant",
            "name": "RELAYER_ROLE",
            "nameLocation": "815:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "791:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2235,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454c415945525f524f4c45",
                  "id": 2237,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "840:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4",
                    "typeString": "literal_string \"RELAYER_ROLE\""
                  },
                  "value": "RELAYER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4",
                    "typeString": "literal_string \"RELAYER_ROLE\""
                  }
                ],
                "id": 2236,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "830:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "830:25:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2259,
              "nodeType": "Block",
              "src": "988:103:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2249,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "1021:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2250,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "1028:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2248,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1805,
                      "src": "998:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2252,
                  "nodeType": "ExpressionStatement",
                  "src": "998:38:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2254,
                        "name": "RELAYER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "1057:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2255,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "1071:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1071:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2253,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        465
                      ],
                      "referencedDeclaration": 465,
                      "src": "1046:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2258,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:38:7"
                }
              ]
            },
            "id": 2260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2245,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2529,
                  "src": "976:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "976:11:7"
              }
            ],
            "name": "__ERC20ETHless_init_unchained",
            "nameLocation": "871:29:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "924:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "910:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "953:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "939:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:66:7"
            },
            "returnParameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:7"
            },
            "scope": 2417,
            "src": "862:229:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2342,
              "nodeType": "Block",
              "src": "1831:701:7",
              "statements": [
                {
                  "assignments": [
                    2279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2279,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "1849:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2342,
                      "src": "1841:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1841:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2283,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2281,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "1875:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2280,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1865:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1841:41:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2285,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2279,
                          "src": "1913:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2286,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2267,
                                "src": "1931:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2287,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2269,
                                "src": "1940:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1931:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2289,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1930:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1913:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304554486c6573733a207468652062616c616e6365206973206e6f742073756666696369656e74",
                        "id": 2291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1958:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a8f00769cc99875962930cc4ad08526cb353c9a4c404c875397c7d25261bbda",
                          "typeString": "literal_string \"ERC20ETHless: the balance is not sufficient\""
                        },
                        "value": "ERC20ETHless: the balance is not sufficient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a8f00769cc99875962930cc4ad08526cb353c9a4c404c875397c7d25261bbda",
                          "typeString": "literal_string \"ERC20ETHless: the balance is not sufficient\""
                        }
                      ],
                      "id": 2284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1892:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:121:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2293,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:121:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2295,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2034:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2296,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2271,
                        "src": "2042:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2294,
                      "name": "_useNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "2024:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:24:7"
                },
                {
                  "assignments": [
                    2300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2300,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2067:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2342,
                      "src": "2059:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2299,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2059:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2320,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2304,
                                "name": "GluwacoinModel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2437,
                                "src": "2131:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GluwacoinModel_$2437_$",
                                  "typeString": "type(library GluwacoinModel)"
                                }
                              },
                              "id": 2305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "SigDomain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2425,
                              "src": "2131:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SigDomain_$2425_$",
                                "typeString": "type(enum GluwacoinModel.SigDomain)"
                              }
                            },
                            "id": 2306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2423,
                            "src": "2131:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigDomain_$2425",
                              "typeString": "enum GluwacoinModel.SigDomain"
                            }
                          },
                          {
                            "expression": {
                              "id": 2307,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2182:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2182:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2311,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2221:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ETHlessTransfer_$2417",
                                  "typeString": "contract ETHlessTransfer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ETHlessTransfer_$2417",
                                  "typeString": "contract ETHlessTransfer"
                                }
                              ],
                              "id": 2310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2213:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2309,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2213:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2213:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2313,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "2244:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2314,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2265,
                            "src": "2268:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2315,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2267,
                            "src": "2295:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2316,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2269,
                            "src": "2319:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2317,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2271,
                            "src": "2340:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_SigDomain_$2425",
                              "typeString": "enum GluwacoinModel.SigDomain"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2302,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "2097:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2097:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2097:262:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2301,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2074:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:295:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2059:310:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2324,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2300,
                        "src": "2407:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2325,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2413:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2326,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2273,
                        "src": "2421:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 2321,
                        "name": "Validate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "2379:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Validate_$2484_$",
                          "typeString": "type(library Validate)"
                        }
                      },
                      "id": 2323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_validateSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2483,
                      "src": "2379:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address,bytes memory) pure returns (bool)"
                      }
                    },
                    "id": 2327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2328,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2330,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2445:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2331,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "2453:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2329,
                      "name": "_collect",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "2436:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2335,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2477:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2336,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2265,
                        "src": "2485:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2337,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "2496:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2334,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2343,
                        2083
                      ],
                      "referencedDeclaration": 2083,
                      "src": "2467:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:36:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2521:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2277,
                  "id": 2341,
                  "nodeType": "Return",
                  "src": "2514:11:7"
                }
              ]
            },
            "documentation": {
              "id": 2261,
              "nodeType": "StructuredDocumentation",
              "src": "1097:517:7",
              "text": " @dev Moves `amount` tokens from the `sender`'s account to `recipient`\n and moves `fee` tokens from the `sender`'s account to a relayer's address.\n Returns a boolean value indicating whether the operation succeeded.\n Emits two {Transfer} events.\n Requirements:\n - `recipient` cannot be the zero address.\n - the `sender` must have a balance of at least the sum of `amount` and `fee`.\n - the `nonce` is only used once per `sender`."
            },
            "id": 2343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1628:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2263,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1655:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1647:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1679:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1671:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2267,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1706:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1698:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2269,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1730:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1722:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2271,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1751:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1743:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1781:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1766:18:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1637:153:7"
            },
            "returnParameters": {
              "id": 2277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1822:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1817:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:14:7"
            },
            "scope": 2417,
            "src": "1619:913:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2368,
              "nodeType": "Block",
              "src": "2597:191:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2628:27:7",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2351,
                              "name": "_usedNonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2234,
                              "src": "2629:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 2353,
                            "indexExpression": {
                              "id": 2352,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2345,
                              "src": "2641:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2629:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2355,
                          "indexExpression": {
                            "id": 2354,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "2649:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2629:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4554486c6573733a20746865206e6f6e63652068617320616c7265616479206265656e207573656420666f7220746869732061646472657373",
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2669:59:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38c0b5222e5456cecdca0bf0a3d6f001f3057709b1acc09d2630d2b4b498a5e4",
                          "typeString": "literal_string \"ETHless: the nonce has already been used for this address\""
                        },
                        "value": "ETHless: the nonce has already been used for this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38c0b5222e5456cecdca0bf0a3d6f001f3057709b1acc09d2630d2b4b498a5e4",
                          "typeString": "literal_string \"ETHless: the nonce has already been used for this address\""
                        }
                      ],
                      "id": 2350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2607:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:131:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2359,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:131:7"
                },
                {
                  "expression": {
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2360,
                          "name": "_usedNonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2234,
                          "src": "2748:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 2363,
                        "indexExpression": {
                          "id": 2361,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2345,
                          "src": "2760:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2748:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2364,
                      "indexExpression": {
                        "id": 2362,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "2768:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2748:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2777:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2748:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2367,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:33:7"
                }
              ]
            },
            "id": 2369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_useNonce",
            "nameLocation": "2547:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2345,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2565:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2557:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2581:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2573:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2556:31:7"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:7"
            },
            "scope": 2417,
            "src": "2538:250:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2192
            ],
            "body": {
              "id": 2389,
              "nodeType": "Block",
              "src": "3249:72:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2384,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "3297:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2385,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2374,
                        "src": "3303:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2386,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "3307:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2381,
                        "name": "ERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "3259:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$2208_$",
                          "typeString": "type(contract ERC20Upgradeable)"
                        }
                      },
                      "id": 2383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2192,
                      "src": "3259:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2388,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:55:7"
                }
              ]
            },
            "documentation": {
              "id": 2370,
              "nodeType": "StructuredDocumentation",
              "src": "2794:303:7",
              "text": "@dev check the amount of available tokens of sender to transfer.\n Do 2 checks:\n - Total balance must be equal or higher than the transferring amount.\n - Unreserving (the amount of tokens are not put as a reserve) must be equal or higher than the transferring amount."
            },
            "id": 2390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3112:20:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2379,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2378,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2208,
                  "src": "3231:16:7"
                }
              ],
              "src": "3222:26:7"
            },
            "parameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3150:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "3142:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3172:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "3164:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3192:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "3184:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3132:72:7"
            },
            "returnParameters": {
              "id": 2380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:0:7"
            },
            "scope": 2417,
            "src": "3103:218:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2411,
              "nodeType": "Block",
              "src": "3479:110:7",
              "statements": [
                {
                  "assignments": [
                    2399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2399,
                      "mutability": "mutable",
                      "name": "relayer",
                      "nameLocation": "3497:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2411,
                      "src": "3489:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2398,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3489:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2404,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2401,
                        "name": "RELAYER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "3521:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3535:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2400,
                      "name": "getRoleMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "3507:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint256) view returns (address)"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3489:48:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2406,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2393,
                        "src": "3558:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "3566:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2408,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "3575:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2405,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2343,
                        2083
                      ],
                      "referencedDeclaration": 2083,
                      "src": "3548:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:34:7"
                }
              ]
            },
            "documentation": {
              "id": 2391,
              "nodeType": "StructuredDocumentation",
              "src": "3327:88:7",
              "text": "@dev Collects `fee` from the sender.\n Emits a {Transfer} event."
            },
            "id": 2412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collect",
            "nameLocation": "3429:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3446:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "3438:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3462:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "3454:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:32:7"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3479:0:7"
            },
            "scope": 2417,
            "src": "3420:169:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2416,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3615:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "3595:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2413,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3595:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2415,
              "length": {
                "hexValue": "3530",
                "id": 2414,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3603:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "3595:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 2418,
        "src": "485:3138:7",
        "usedErrors": []
      }
    ],
    "src": "32:3592:7"
  },
  "legacyAST": {
    "absolutePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/ETHlessTransfer.sol",
    "exportedSymbols": {
      "AccessControlEnumerableUpgradeable": [
        470
      ],
      "AccessControlUpgradeable": [
        854
      ],
      "AddressUpgradeable": [
        2877
      ],
      "ContextUpgradeable": [
        873
      ],
      "ECDSAUpgradeable": [
        3263
      ],
      "ERC165Upgradeable": [
        3309
      ],
      "ERC20Upgradeable": [
        2208
      ],
      "ETHlessTransfer": [
        2417
      ],
      "EnumerableSetUpgradeable": [
        3830
      ],
      "GluwacoinModel": [
        2437
      ],
      "IAccessControlEnumerableUpgradeable": [
        287
      ],
      "IAccessControlUpgradeable": [
        515
      ],
      "IERC165Upgradeable": [
        3321
      ],
      "IERC20MetadataUpgradeable": [
        2633
      ],
      "IERC20Upgradeable": [
        2608
      ],
      "Initializable": [
        2530
      ],
      "StringsUpgradeable": [
        3080
      ],
      "Validate": [
        2484
      ]
    },
    "id": 2418,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2210,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/AccessControlEnumerableUpgradeable.sol",
        "file": "./AccessControlEnumerableUpgradeable.sol",
        "id": 2211,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 471,
        "src": "58:50:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 2212,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2531,
        "src": "109:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/abstracts/ERC20Upgradeable.sol",
        "file": "./ERC20Upgradeable.sol",
        "id": 2213,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2209,
        "src": "185:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/libs/GluwacoinModel.sol",
        "file": "../libs/GluwacoinModel.sol",
        "id": 2214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2438,
        "src": "218:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/osboxes/KRWC-G-1/contracts/libs/Validate.sol",
        "file": "../libs/Validate.sol",
        "id": 2215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 2485,
        "src": "256:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2217,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2530,
              "src": "517:13:7"
            },
            "id": 2218,
            "nodeType": "InheritanceSpecifier",
            "src": "517:13:7"
          },
          {
            "baseName": {
              "id": 2219,
              "name": "AccessControlEnumerableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 470,
              "src": "536:34:7"
            },
            "id": 2220,
            "nodeType": "InheritanceSpecifier",
            "src": "536:34:7"
          },
          {
            "baseName": {
              "id": 2221,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2208,
              "src": "576:16:7"
            },
            "id": 2222,
            "nodeType": "InheritanceSpecifier",
            "src": "576:16:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2216,
          "nodeType": "StructuredDocumentation",
          "src": "288:196:7",
          "text": " @dev Extension of {ERC20} that allows users to send ETHless transfer by hiring a transaction relayer to pay the\n gas fee for them. The relayer gets paid in this ERC20 token for `fee`."
        },
        "fullyImplemented": true,
        "id": 2417,
        "linearizedBaseContracts": [
          2417,
          2208,
          2633,
          2608,
          470,
          854,
          3309,
          3321,
          515,
          873,
          287,
          2530
        ],
        "name": "ETHlessTransfer",
        "nameLocation": "494:15:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2225,
            "libraryName": {
              "id": 2223,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2877,
              "src": "605:18:7"
            },
            "nodeType": "UsingForDirective",
            "src": "599:37:7",
            "typeName": {
              "id": 2224,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "628:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2228,
            "libraryName": {
              "id": 2226,
              "name": "ECDSAUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3263,
              "src": "647:16:7"
            },
            "nodeType": "UsingForDirective",
            "src": "641:35:7",
            "typeName": {
              "id": 2227,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "id": 2234,
            "mutability": "mutable",
            "name": "_usedNonces",
            "nameLocation": "735:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "682:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 2233,
              "keyType": {
                "id": 2229,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:44:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 2232,
                "keyType": {
                  "id": 2230,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "709:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "701:24:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 2231,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "926d7d7f",
            "id": 2239,
            "mutability": "constant",
            "name": "RELAYER_ROLE",
            "nameLocation": "815:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "791:64:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2235,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454c415945525f524f4c45",
                  "id": 2237,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "840:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4",
                    "typeString": "literal_string \"RELAYER_ROLE\""
                  },
                  "value": "RELAYER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4",
                    "typeString": "literal_string \"RELAYER_ROLE\""
                  }
                ],
                "id": 2236,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "830:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "830:25:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2259,
              "nodeType": "Block",
              "src": "988:103:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2249,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "1021:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2250,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "1028:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2248,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1805,
                      "src": "998:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2252,
                  "nodeType": "ExpressionStatement",
                  "src": "998:38:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2254,
                        "name": "RELAYER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "1057:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2255,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "1071:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1071:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2253,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        465
                      ],
                      "referencedDeclaration": 465,
                      "src": "1046:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2258,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:38:7"
                }
              ]
            },
            "id": 2260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2245,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2529,
                  "src": "976:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "976:11:7"
              }
            ],
            "name": "__ERC20ETHless_init_unchained",
            "nameLocation": "871:29:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "924:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "910:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "953:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "939:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:66:7"
            },
            "returnParameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:7"
            },
            "scope": 2417,
            "src": "862:229:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2342,
              "nodeType": "Block",
              "src": "1831:701:7",
              "statements": [
                {
                  "assignments": [
                    2279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2279,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "1849:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2342,
                      "src": "1841:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1841:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2283,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2281,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "1875:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2280,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1865:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1841:41:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2285,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2279,
                          "src": "1913:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2286,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2267,
                                "src": "1931:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2287,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2269,
                                "src": "1940:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1931:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2289,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1930:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1913:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304554486c6573733a207468652062616c616e6365206973206e6f742073756666696369656e74",
                        "id": 2291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1958:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a8f00769cc99875962930cc4ad08526cb353c9a4c404c875397c7d25261bbda",
                          "typeString": "literal_string \"ERC20ETHless: the balance is not sufficient\""
                        },
                        "value": "ERC20ETHless: the balance is not sufficient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a8f00769cc99875962930cc4ad08526cb353c9a4c404c875397c7d25261bbda",
                          "typeString": "literal_string \"ERC20ETHless: the balance is not sufficient\""
                        }
                      ],
                      "id": 2284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1892:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:121:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2293,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:121:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2295,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2034:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2296,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2271,
                        "src": "2042:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2294,
                      "name": "_useNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "2024:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:24:7"
                },
                {
                  "assignments": [
                    2300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2300,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2067:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2342,
                      "src": "2059:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2299,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2059:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2320,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2304,
                                "name": "GluwacoinModel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2437,
                                "src": "2131:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GluwacoinModel_$2437_$",
                                  "typeString": "type(library GluwacoinModel)"
                                }
                              },
                              "id": 2305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "SigDomain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2425,
                              "src": "2131:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SigDomain_$2425_$",
                                "typeString": "type(enum GluwacoinModel.SigDomain)"
                              }
                            },
                            "id": 2306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2423,
                            "src": "2131:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigDomain_$2425",
                              "typeString": "enum GluwacoinModel.SigDomain"
                            }
                          },
                          {
                            "expression": {
                              "id": 2307,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2182:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2182:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2311,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2221:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ETHlessTransfer_$2417",
                                  "typeString": "contract ETHlessTransfer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ETHlessTransfer_$2417",
                                  "typeString": "contract ETHlessTransfer"
                                }
                              ],
                              "id": 2310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2213:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2309,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2213:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2213:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2313,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "2244:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2314,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2265,
                            "src": "2268:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2315,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2267,
                            "src": "2295:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2316,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2269,
                            "src": "2319:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2317,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2271,
                            "src": "2340:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_SigDomain_$2425",
                              "typeString": "enum GluwacoinModel.SigDomain"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2302,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "2097:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2097:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2097:262:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2301,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2074:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:295:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2059:310:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2324,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2300,
                        "src": "2407:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2325,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2413:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2326,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2273,
                        "src": "2421:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 2321,
                        "name": "Validate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "2379:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Validate_$2484_$",
                          "typeString": "type(library Validate)"
                        }
                      },
                      "id": 2323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_validateSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2483,
                      "src": "2379:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address,bytes memory) pure returns (bool)"
                      }
                    },
                    "id": 2327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2328,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2330,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2445:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2331,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "2453:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2329,
                      "name": "_collect",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "2436:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2335,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "2477:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2336,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2265,
                        "src": "2485:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2337,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "2496:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2334,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2343,
                        2083
                      ],
                      "referencedDeclaration": 2083,
                      "src": "2467:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:36:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2521:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2277,
                  "id": 2341,
                  "nodeType": "Return",
                  "src": "2514:11:7"
                }
              ]
            },
            "documentation": {
              "id": 2261,
              "nodeType": "StructuredDocumentation",
              "src": "1097:517:7",
              "text": " @dev Moves `amount` tokens from the `sender`'s account to `recipient`\n and moves `fee` tokens from the `sender`'s account to a relayer's address.\n Returns a boolean value indicating whether the operation succeeded.\n Emits two {Transfer} events.\n Requirements:\n - `recipient` cannot be the zero address.\n - the `sender` must have a balance of at least the sum of `amount` and `fee`.\n - the `nonce` is only used once per `sender`."
            },
            "id": 2343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1628:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2263,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1655:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1647:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1679:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1671:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2267,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1706:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1698:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2269,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1730:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1722:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2271,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1751:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1743:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1781:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1766:18:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1637:153:7"
            },
            "returnParameters": {
              "id": 2277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1822:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1817:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:14:7"
            },
            "scope": 2417,
            "src": "1619:913:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2368,
              "nodeType": "Block",
              "src": "2597:191:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2628:27:7",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2351,
                              "name": "_usedNonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2234,
                              "src": "2629:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 2353,
                            "indexExpression": {
                              "id": 2352,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2345,
                              "src": "2641:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2629:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2355,
                          "indexExpression": {
                            "id": 2354,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "2649:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2629:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4554486c6573733a20746865206e6f6e63652068617320616c7265616479206265656e207573656420666f7220746869732061646472657373",
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2669:59:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38c0b5222e5456cecdca0bf0a3d6f001f3057709b1acc09d2630d2b4b498a5e4",
                          "typeString": "literal_string \"ETHless: the nonce has already been used for this address\""
                        },
                        "value": "ETHless: the nonce has already been used for this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38c0b5222e5456cecdca0bf0a3d6f001f3057709b1acc09d2630d2b4b498a5e4",
                          "typeString": "literal_string \"ETHless: the nonce has already been used for this address\""
                        }
                      ],
                      "id": 2350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2607:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:131:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2359,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:131:7"
                },
                {
                  "expression": {
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2360,
                          "name": "_usedNonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2234,
                          "src": "2748:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 2363,
                        "indexExpression": {
                          "id": 2361,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2345,
                          "src": "2760:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2748:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2364,
                      "indexExpression": {
                        "id": 2362,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "2768:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2748:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2777:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2748:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2367,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:33:7"
                }
              ]
            },
            "id": 2369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_useNonce",
            "nameLocation": "2547:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2345,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2565:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2557:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2581:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2573:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2556:31:7"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:7"
            },
            "scope": 2417,
            "src": "2538:250:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2192
            ],
            "body": {
              "id": 2389,
              "nodeType": "Block",
              "src": "3249:72:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2384,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "3297:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2385,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2374,
                        "src": "3303:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2386,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "3307:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2381,
                        "name": "ERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "3259:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$2208_$",
                          "typeString": "type(contract ERC20Upgradeable)"
                        }
                      },
                      "id": 2383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2192,
                      "src": "3259:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2388,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:55:7"
                }
              ]
            },
            "documentation": {
              "id": 2370,
              "nodeType": "StructuredDocumentation",
              "src": "2794:303:7",
              "text": "@dev check the amount of available tokens of sender to transfer.\n Do 2 checks:\n - Total balance must be equal or higher than the transferring amount.\n - Unreserving (the amount of tokens are not put as a reserve) must be equal or higher than the transferring amount."
            },
            "id": 2390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3112:20:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2379,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2378,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2208,
                  "src": "3231:16:7"
                }
              ],
              "src": "3222:26:7"
            },
            "parameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3150:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "3142:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3172:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "3164:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3192:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "3184:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3132:72:7"
            },
            "returnParameters": {
              "id": 2380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:0:7"
            },
            "scope": 2417,
            "src": "3103:218:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2411,
              "nodeType": "Block",
              "src": "3479:110:7",
              "statements": [
                {
                  "assignments": [
                    2399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2399,
                      "mutability": "mutable",
                      "name": "relayer",
                      "nameLocation": "3497:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2411,
                      "src": "3489:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2398,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3489:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2404,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2401,
                        "name": "RELAYER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "3521:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3535:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2400,
                      "name": "getRoleMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "3507:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint256) view returns (address)"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3489:48:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2406,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2393,
                        "src": "3558:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "3566:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2408,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "3575:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2405,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2343,
                        2083
                      ],
                      "referencedDeclaration": 2083,
                      "src": "3548:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:34:7"
                }
              ]
            },
            "documentation": {
              "id": 2391,
              "nodeType": "StructuredDocumentation",
              "src": "3327:88:7",
              "text": "@dev Collects `fee` from the sender.\n Emits a {Transfer} event."
            },
            "id": 2412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collect",
            "nameLocation": "3429:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3446:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "3438:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3462:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "3454:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:32:7"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3479:0:7"
            },
            "scope": 2417,
            "src": "3420:169:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2416,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3615:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "3595:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2413,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3595:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2415,
              "length": {
                "hexValue": "3530",
                "id": 2414,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3603:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "3595:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 2418,
        "src": "485:3138:7",
        "usedErrors": []
      }
    ],
    "src": "32:3592:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-13T23:43:40.173Z",
  "devdoc": {
    "details": "Extension of {ERC20} that allows users to send ETHless transfer by hiring a transaction relayer to pay the gas fee for them. The relayer gets paid in this ERC20 token for `fee`.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Overload {grantRole} to track enumerable memberships"
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "renounceRole(bytes32,address)": {
        "details": "Overload {renounceRole} to track enumerable memberships"
      },
      "revokeRole(bytes32,address)": {
        "details": "Overload {revokeRole} to track enumerable memberships"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}